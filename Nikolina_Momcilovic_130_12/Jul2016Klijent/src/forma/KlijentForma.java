/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forma;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import komunikacija.Komunikacija;
import konstante.Konstante;
import model.ModelTabeleKlijent;
import transfer.KlijentskiTransferObjekat;
import transfer.ServerskiTransferObjekat;

/**
 *
 * @author Nina777
 */
public class KlijentForma extends javax.swing.JFrame {

    /**
     * Creates new form KlijentForma
     */
    public KlijentForma() {
        initComponents();
        popuniCB();
        srediTabelu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtTabela = new javax.swing.JTable();
        jbtnDodaj = new javax.swing.JButton();
        jbtnObrisi = new javax.swing.JButton();
        jbtnSacuvaj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtTabela);

        jbtnDodaj.setText("Dodaj");
        jbtnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDodajActionPerformed(evt);
            }
        });

        jbtnObrisi.setText("Obrisi");
        jbtnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnObrisiActionPerformed(evt);
            }
        });

        jbtnSacuvaj.setText("Sacuvaj");
        jbtnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnDodaj)
                        .addGap(112, 112, 112)
                        .addComponent(jbtnObrisi))
                    .addComponent(jbtnSacuvaj))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(169, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnDodaj)
                    .addComponent(jbtnObrisi))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtnSacuvaj)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnObrisiActionPerformed
        ModelTabeleKlijent mtk = (ModelTabeleKlijent) jtTabela.getModel();

        int red = jtTabela.getSelectedRow();

        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Odaberite red");
        } else {
            mtk.obrisiRed(red);
        }
    }//GEN-LAST:event_jbtnObrisiActionPerformed

    private void jbtnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDodajActionPerformed
        ModelTabeleKlijent mtk = (ModelTabeleKlijent) jtTabela.getModel();
        mtk.dodajRed();

//        moguce da ovde zove kombo za tabelu popuniCBuTabeli();
    }//GEN-LAST:event_jbtnDodajActionPerformed

    private void jbtnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSacuvajActionPerformed
//        TODO: Odkomentarisati ovaj try-catch i pogledaj pod *****
//        validacije();
//        try {

            ModelTabeleKlijent mtk = (ModelTabeleKlijent) jtTabela.getModel();
            KlijentskiTransferObjekat kto = new KlijentskiTransferObjekat();
//            ArrayList<StavkaRacuna> listaStavki = mtk.getListaStavki();
//
//            int id = Integer.parseInt(jtfSifraRacuna.getText());
//
//            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
//            Date datum = sdf.parse(jtfDatum.getText());
//            Klijent kl = (Klijent) cbKlijent.getSelectedItem();
//            Double ukIzn = 0.0;
//            for (StavkaRacuna stav : listaStavki) {
//                ukIzn += stav.getIznos();
//            }
//
//            Racun racun = new Racun(id, datum, kl, ukIzn);
//
//            for (StavkaRacuna sr : listaStavki) {
//                sr.setRacun(racun);
//            }
//
//            ***** U ZAVISNOSTI OD TOGA STA CUVAMO salje se Konstanta.SACUVAJ_KLASA
//                  Pre toga je potrebno napuniti taj objekat
            
//            kto.setOperacija(Konstante.SACUVAJ_RACUN);
//            kto.setParametar(racun);
//
            Komunikacija.getInstanca().posaljiZahtev(kto);
            ServerskiTransferObjekat sto = Komunikacija.getInstanca().primiOdgovor();
            JOptionPane.showMessageDialog(this, sto.getPoruka());
//
//            kto.setOperacija(Konstante.SACUVAJ_STAVKE);
//            kto.setParametar(listaStavki);

            Komunikacija.getInstanca().posaljiZahtev(kto);
            sto = Komunikacija.getInstanca().primiOdgovor();
            JOptionPane.showMessageDialog(this, sto.getPoruka());

            boolean sacuvano = (boolean) sto.getOdgovor();
            if (sacuvano) {
//                promeniEnabled(true); ukoliko se menja da je neko polje disabled
                mtk.skloniPodatke();
            }
//        } catch (ParseException ex) {
//            Logger.getLogger(KlijentForma.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_jbtnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KlijentForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KlijentForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KlijentForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KlijentForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KlijentForma().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnDodaj;
    private javax.swing.JButton jbtnObrisi;
    private javax.swing.JButton jbtnSacuvaj;
    private javax.swing.JTable jtTabela;
    // End of variables declaration//GEN-END:variables

    private void popuniCB() {
//        TODO: U zavisnosti od CB odaberi KLASU IZ DOMENA, i Konstanta VRATI_KLASA
//        KlijentskiTransferObjekat kto = new KlijentskiTransferObjekat();
//        kto.setOperacija(Konstante.VRATI_KLIJENTE);
//
//        Komunikacija.getInstanca().posaljiZahtev(kto);
//
//        ServerskiTransferObjekat sto = Komunikacija.getInstanca().primiOdgovor();
//
//        ArrayList<Klijent> lista = (ArrayList<Klijent>) sto.getOdgovor();
//
//        cbKlijent.removeAllItems();
//
//        for (Klijent kl : lista) {
//            cbKlijent.addItem(kl);
//        }
    }

    private void srediTabelu() {
        ModelTabeleKlijent mtk = new ModelTabeleKlijent();
        jtTabela.setModel(mtk);
    }

    private void popuniCBuTabeli() {
//        TODO: U zavisnosti od CB odaberi KLASU IZ DOMENA, i Konstanta VRATI_KLASA

//        jtTabela.setModel(mtk);
//        KlijentskiTransferObjekat kto = new KlijentskiTransferObjekat();
//        kto.setOperacija(Konstante.VRATI_INZENJERE);
//
//        Komunikacija.getInstanca().posaljiZahtev(kto);
//
//        ServerskiTransferObjekat sto = Komunikacija.getInstanca().primiOdgovor();
//
//        ArrayList<Inzenjer> listaInz = (ArrayList<Inzenjer>) sto.getOdgovor();
//
//        JComboBox kombo = new JComboBox();
//        kombo.removeAllItems();
//        for (Inzenjer inz : listaInz) {
//            kombo.addItem(inz);
//        }
//
//        TableColumnModel tcm = jtTabela.getColumnModel();
//        TODO: promeni broj kolone shodno tome koja se menja
//        TableColumn kolona = tcm.getColumn(1);
//        kolona.setCellEditor(new DefaultCellEditor(kombo));
    }

//    * metoda za promenu da se polje vise ne moze popuniti
    private void promeniEnabled(boolean b) {
//        jtfNaziv.setEnabled(b);

    }

//    *PRONADJI DUGME
//    private void jbtnPronadjiActionPerformed(java.awt.event.ActionEvent evt) {                                             
//        int sifra = Integer.parseInt(jtfSifraRacuna.getText());
//
//        KlijentskiTransferObjekat kto = new KlijentskiTransferObjekat();
//        kto.setOperacija(Konstante.VRATI_RACUN);
//        kto.setParametar(sifra);
//
//        Komunikacija.getInstanca().posaljiZahtev(kto);
//
//        ServerskiTransferObjekat sto = Komunikacija.getInstanca().primiOdgovor();
//        Racun racun = (Racun) sto.getOdgovor();
//        jtfDatum.setText(new SimpleDateFormat("dd.MM.yyyy").format(racun.getDatum()));
//
//        cbKlijent.setSelectedItem(racun.getKlijent());
//
//        kto.setOperacija(Konstante.VRATI_STAVKE);
//        Komunikacija.getInstanca().posaljiZahtev(kto);
//        ServerskiTransferObjekat sto2 = Komunikacija.getInstanca().primiOdgovor();
//        ArrayList<StavkaRacuna> listaStavki = (ArrayList<StavkaRacuna>) sto2.getOdgovor();
//
//        ArrayList<StavkaRacuna> listaStavkiModif = new ArrayList<>();
//
//        for (StavkaRacuna sr : listaStavki) {
//            if (sr.getRacun().getRacunID() == sifra) {
//                listaStavkiModif.add(sr);
//            }
//        }
//        ModelTabeleKlijent mtk = new ModelTabeleKlijent();
//        mtk.setListaStavki(listaStavkiModif);
//        jtTabela.setModel(mtk);
//    }
    
    public void validacije(){
//        try {
//            datumDo = sdf.parse(jtxtDatumDo.getText());
//            datumOd = sdf.parse(jtxtDatumOD.getText());
//        } catch (ParseException ex) {
//            JOptionPane.showMessageDialog(this, "Los format datumea");
//            return;
//        }
//        if(datumOd.compareTo(datumDo) != -1){
//         JOptionPane.showMessageDialog(this, "dat od veci");
//            return;
//        }
//        
//        if(datumOd.compareTo(new Date()) != 1){
//         JOptionPane.showMessageDialog(this, "dat od mora biti veci od sadanjeg datuma");
//            return;
//        }
    }
}
